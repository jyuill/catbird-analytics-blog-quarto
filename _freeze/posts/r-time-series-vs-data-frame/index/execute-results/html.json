{
  "hash": "1ecac00b99508e9da37fd449ee28bd57",
  "result": {
    "markdown": "---\ntitle: 'R Time Series Objects vs Data Frames: Advantages and Limitations'\nauthor: John Yuill\ndate: '2022-01-30'\ncategories: [R, time-series]\ndraft: false\nimage: time-series-thumb.png\n---\n\n\n\n\nAs I learn more and more about R, questions often arise about which packages/methods/tools to use for a given situation. R is a vast - and growing - universe and I'm not interested in learning *everything* in that universe. I'm interested in learning the shortest paths between where I am now and my objective. As an adherent of the tidyverse, I lean strongly toward solutions in that realm. But, to paraphrase an old saying, 'tidyverse is a playgound...not a jail' and if a problem can be handled better by stepping outside the tidyverse, I'm all for that.\n\nOne of these areas is in dealing with **time series**: data sets comprised of repeated measurements over consistent time intervals (hourly, daily, monthly, etc). You can work with time series data using data frames, the fundamental building block of data analysis in R, but there are more specialized tools that offer more flexibility, specific capabilities and ease of use when analyzing time-based data. This can come into play in a wide variety of situations: weekly website visits, monthly sales, daily stock prices, annual GDP, electricity use by minute, that kind of thing.\n\nSo what are these **time series advantages**? How do we leverage them? What limitations of time series objects are good to be aware of? I'm not pretending this is a definitive guide, but I've been looking at this for a while and hear are my observations...\n\n*(A word on forecasting: this is a MAJOR use case for time series but is not the main focus here and I'll only touch on that briefly below.)*\n\n### Time Series Essentials\n\n**ts** is the basic class for time series objects in R. You can do a lot with ts but its functionality have been extend by other packages, in particular **zoo** and more recently **xts**.\n\n**xts** is a leading, evolved R package for working with time series. It builds on **zoo**, an earlier pkg for handling time series in R. **Datacamp** has a very nice\n\nSo I'm just going to scratch the surface and hit some highlights with examples here.\n\n#### Get a Time Series Object\n\nAt its most basic, a time series object is a list or sometimes matrix of observations at regular time intervals.\n\nExamples in built-in R data sets include:\n\n-   annual Nile river flows\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(Nile)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"ts\"\n```\n:::\n\n```{.r .cell-code}\nstr(Nile)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Time-Series [1:100] from 1871 to 1970: 1120 1160 963 1210 1160 1160 813 1230 1370 1140 ...\n```\n:::\n\n```{.r .cell-code}\nNile\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime Series:\nStart = 1871 \nEnd = 1970 \nFrequency = 1 \n  [1] 1120 1160  963 1210 1160 1160  813 1230 1370 1140  995  935 1110  994 1020\n [16]  960 1180  799  958 1140 1100 1210 1150 1250 1260 1220 1030 1100  774  840\n [31]  874  694  940  833  701  916  692 1020 1050  969  831  726  456  824  702\n [46] 1120 1100  832  764  821  768  845  864  862  698  845  744  796 1040  759\n [61]  781  865  845  944  984  897  822 1010  771  676  649  846  812  742  801\n [76] 1040  860  874  848  890  744  749  838 1050  918  986  797  923  975  815\n [91] 1020  906  901 1170  912  746  919  718  714  740\n```\n:::\n:::\n\n\n-   monthly Air Passengers - yes, I know everybody uses Air Passengers for their time series example. So damn handy. Different examples below, I promise. ;)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(AirPassengers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"ts\"\n```\n:::\n\n```{.r .cell-code}\nstr(AirPassengers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Time-Series [1:144] from 1949 to 1961: 112 118 132 129 121 135 148 148 136 119 ...\n```\n:::\n\n```{.r .cell-code}\nAirPassengers\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n1949 112 118 132 129 121 135 148 148 136 119 104 118\n1950 115 126 141 135 125 149 170 170 158 133 114 140\n1951 145 150 178 163 172 178 199 199 184 162 146 166\n1952 171 180 193 181 183 218 230 242 209 191 172 194\n1953 196 196 236 235 229 243 264 272 237 211 180 201\n1954 204 188 235 227 234 264 302 293 259 229 203 229\n1955 242 233 267 269 270 315 364 347 312 274 237 278\n1956 284 277 317 313 318 374 413 405 355 306 271 306\n1957 315 301 356 348 355 422 465 467 404 347 305 336\n1958 340 318 362 348 363 435 491 505 404 359 310 337\n1959 360 342 406 396 420 472 548 559 463 407 362 405\n1960 417 391 419 461 472 535 622 606 508 461 390 432\n```\n:::\n:::\n\n\nBoth these examples are time series of the **ts** class, and we can see right off that these are different data structures from data frames. A key thing to note about time series is that **date/time is not in a column the way it would be in a data frame, but is in an index** - similar to row.names in a data frame.\n\nIf we look at the index for the Nile river data, we can see the time values and we can check the start and end. This info corresponds to the structure info shown above, where **start = 1871**, **end = 1970**, and **frequency = 1**, meaning 1 observation per year, **annual data**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nindex(Nile)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 1871 1872 1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885\n [16] 1886 1887 1888 1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900\n [31] 1901 1902 1903 1904 1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915\n [46] 1916 1917 1918 1919 1920 1921 1922 1923 1924 1925 1926 1927 1928 1929 1930\n [61] 1931 1932 1933 1934 1935 1936 1937 1938 1939 1940 1941 1942 1943 1944 1945\n [76] 1946 1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960\n [91] 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970\n```\n:::\n\n```{.r .cell-code}\nstart(Nile)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1871    1\n```\n:::\n\n```{.r .cell-code}\nend(Nile)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1970    1\n```\n:::\n:::\n\n\nAs discussed above, ts is useful, but xts offers additional flexibility and features.\n\n#### Convert ts to xts\n\nConverting to an xts object can often make the data more intuitive to deal with.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(xts)\nNile_xts <- as.xts(Nile)\nstr(Nile_xts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn xts object on 1871-01-01 / 1970-01-01 containing: \n  Data:    double [100, 1]\n  Index:   Date [100] (TZ: \"UTC\")\n```\n:::\n\n```{.r .cell-code}\nhead(Nile_xts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           [,1]\n1871-01-01 1120\n1872-01-01 1160\n1873-01-01  963\n1874-01-01 1210\n1875-01-01 1160\n1876-01-01 1160\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nAir_xts <- as.xts(AirPassengers)\nstr(Air_xts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn xts object on Jan 1949 / Dec 1960 containing: \n  Data:    double [144, 1]\n  Index:   yearmon [144] (TZ: \"UTC\")\n```\n:::\n\n```{.r .cell-code}\nhead(Air_xts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         [,1]\nJan 1949  112\nFeb 1949  118\nMar 1949  132\nApr 1949  129\nMay 1949  121\nJun 1949  135\n```\n:::\n:::\n\n\n-   We can see here that xts has reshaped the data from a matrix with rows by year and columns by month to more 'tidy' data with **mth-year as index** and **observations in one column**.\n\n#### Native xts\n\nSome data comes as **xts time series** out of the box. For example, the **quantmod** package fetches stock market data as xts time series automatically:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(quantmod)\n## use quantmod pkg to get some stock prices as time series\nprice <- getSymbols(Symbols='EA', from=\"2020-01-01\", to=Sys.Date(), auto.assign=FALSE)\nclass(price)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"xts\" \"zoo\"\n```\n:::\n\n```{.r .cell-code}\nhead(price)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2020-01-02     108     108    107      107   1901000         106\n2020-01-03     106     108    105      107   1840300         106\n2020-01-06     107     109    107      109   2934200         107\n2020-01-07     109     109    108      108   1692400         107\n2020-01-08     108     110    108      109   2651600         108\n2020-01-09     110     110    108      109   1818600         108\n```\n:::\n:::\n\n\nAs noted, a key characteristic of time series object is that **dates are in an index** rather than being in a date column, as they would be in typical data frame. Looking at the structure of the xts object, we can again see it is different from a data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(price)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn xts object on 2020-01-02 / 2023-04-06 containing: \n  Data:    double [822, 6]\n  Columns: EA.Open, EA.High, EA.Low, EA.Close, EA.Volume ... with 1 more column\n  Index:   Date [822] (TZ: \"UTC\")\n  xts Attributes:\n    $ src    : chr \"yahoo\"\n    $ updated: POSIXct[1:1], format: \"2023-04-08 16:50:35\"\n```\n:::\n:::\n\n\n#### Convert xts to data frame\n\nIf you want to work with the time series as a data frame, it is fairly straightforward to convert an xts object:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_df <- as.data.frame(price)\n## add Date field based on index (row names) of xts object\nprice_df$Date <- index(price)\n## set data frame row names to numbers instead of dates\nrownames(price_df) <- seq(1:nrow(price))\n## reorder columns to put Date first\nprice_df <- price_df %>% select(Date, 1:ncol(price_df)-1)\n## check out structure using glimpse, as is the fashion of the times\nglimpse(price_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 822\nColumns: 7\n$ Date        <date> 2020-01-02, 2020-01-03, 2020-01-06, 2020-01-07, 2020-01-0…\n$ EA.Open     <dbl> 108, 106, 107, 109, 108, 110, 109, 109, 110, 110, 110, 112…\n$ EA.High     <dbl> 108, 108, 109, 109, 110, 110, 109, 110, 110, 110, 111, 113…\n$ EA.Low      <dbl> 107, 105, 107, 108, 108, 108, 108, 109, 109, 109, 110, 112…\n$ EA.Close    <dbl> 107, 107, 109, 108, 109, 109, 109, 110, 110, 110, 111, 113…\n$ EA.Volume   <dbl> 1901000, 1840300, 2934200, 1692400, 2651600, 1818600, 1756…\n$ EA.Adjusted <dbl> 106, 106, 107, 107, 108, 108, 107, 108, 108, 108, 110, 111…\n```\n:::\n:::\n\n\nData frame is basically a straight-up table, whereas the xts object has other structural features.\n\n#### Convert data frame to xts\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## convert data frame to xts object by specifying the date field to use for xts index.\nprice_xts <- xts(price_df, order.by=as.Date(price_df$Date))\nstr(price_xts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn xts object on 2020-01-02 / 2023-04-06 containing: \n  Data:    character [822, 7]\n  Columns: Date, EA.Open, EA.High, EA.Low, EA.Close ... with 2 more columns\n  Index:   Date [822] (TZ: \"UTC\")\n```\n:::\n:::\n\n\nNotice, however, that in the process of converting an xts object to data frame and back to xts, the xts Attributes information has been lost.\n\n#### Saving/Exporting time series data\n\nDue to the structure of an xts object, the best way to save/export for future use in R and preserve all its attributes is to save as [RDS file](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/readRDS), using **saveRDS**. (additional helpful RDS info [here](https://rstudio-education.github.io/hopr/dataio.html#r-files).)\n\nHowever, this won't be helpful if you need to share the data with someone who is not using R. You can save as a CSV file using **write.zoo** (be sure to specificy sep=\",\") and this will maintain the table structure of the data but will drop the attributes. It will automatically move the indexes into an Index column so if someone opens it in Excel/Google Sheets, they will see the dates/times.\n\nSaving as RDS or CSV:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## save as RDS to preserve attributes\nsaveRDS(price, file=\"price.rds\")\nprice_rds <- readRDS(file='price.rds')\nstr(price_rds)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn xts object on 2020-01-02 / 2023-04-06 containing: \n  Data:    double [822, 6]\n  Columns: EA.Open, EA.High, EA.Low, EA.Close, EA.Volume ... with 1 more column\n  Index:   Date [822] (TZ: \"UTC\")\n  xts Attributes:\n    $ src    : chr \"yahoo\"\n    $ updated: POSIXct[1:1], format: \"2023-04-08 16:50:35\"\n```\n:::\n\n```{.r .cell-code}\n## save as CSV - ensure to include sep=\",\"\nwrite.zoo(price, file='price.csv', sep=\",\")\nprice_zoo <- read_csv('price.csv')\n```\n:::\n\n\n### Time Series Strengths\n\nThe structure of a time series leads a variety of advantages related to time-based analysis, compared to data frames. A few of the main ones, at least from my perspective:\n\n-   **Period/Frequency Manipulation**: can easily change from granular periods, such as daily, to aggregated periods.\n-   **Period calculations**: counting number of periods in the data (months, quarters, years).\n-   **Selection/subsetting** based on date ranges.\n-   **Visualization**: a number of visualization options are designed to work with time series.\n-   **Decomposition**: breaking out time series into trend, seasonal, random components for analysis.\n-   **Forecasting**: time series objects are designed for applying various forecasting methods like Holt-Winters and ARIMA. This is well beyond the scope of this post, but we'll show a quick ARIMA example.\n\nNo doubt everything you can do with time series can be done with data frames, but using a time series object can really expedite things.\n\n### Time Series Manipulation/Calculation\n\n#### Period/Frequency Manipulation\n\nChange the period granularity to less granular:\n\n-   easily change daily data to weekly, monthly, quarterly, yearly\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## get periodicity (frequency) for data set\nperiodicity(price)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDaily periodicity from 2020-01-02 to 2023-04-06 \n```\n:::\n\n```{.r .cell-code}\n## aggregate by period\nhead(to.weekly(price)[,1:5])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           price.Open price.High price.Low price.Close price.Volume\n2020-01-03        108        108       105         107      3741300\n2020-01-10        107        110       107         109     10852800\n2020-01-17        109        113       109         113     10221500\n2020-01-24        113        114       112         112      8457000\n2020-01-31        110        113       106         108     18435600\n2020-02-07        108        111       104         109     15973600\n```\n:::\n\n```{.r .cell-code}\nhead(to.monthly(price)[,1:5])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         price.Open price.High price.Low price.Close price.Volume\nJan 2020      107.9        114     105.1         108     51708200\nFeb 2020      107.9        111      98.6         101     55140000\nMar 2020      101.9        112      85.7         100    116497800\nApr 2020       98.4        119      96.7         114     72981400\nMay 2020      113.1        123     111.1         123     71400200\nJun 2020      123.3        134     113.3         132     64143400\n```\n:::\n\n```{.r .cell-code}\nhead(to.yearly(price)[,1:5])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           price.Open price.High price.Low price.Close price.Volume\n2020-12-31        108        147      85.7         144    747474600\n2021-12-31        143        150     120.1         132    641690700\n2022-12-30        132        143     109.2         122    547899700\n2023-04-06        124        131     108.5         125    167447300\n```\n:::\n:::\n\n\nNotice that this isn't a straight roll-up but actual summary: for the monthly data, the High is max of daily data for the month, the Low is minimum for the month, while volume is the sum for the month, all as you would expect.\n\nYou can also pull out the values at the **END** of a period-length, including setting number of periods to skip over each iteration:\n\n-   get index for last day of period length specified in 'on' for every k period.\n-   apply index to dataset to extract the rows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## every 2 weeks (on='week's, k=2)\nend_wk <- endpoints(price, on=\"weeks\", k=2)\nhead(price[end_wk,])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2020-01-03   105.6   107.8  105.1    107.2   1840300       105.7\n2020-01-17   112.4   113.0  111.6    112.9   3053300       111.4\n2020-01-31   110.8   110.8  105.5    107.9   6995800       106.5\n2020-02-14   108.9   109.9  108.8    109.7   1227500       108.2\n2020-02-28   100.3   101.9   98.6    101.4   6853700       100.0\n2020-03-13    98.7    99.6   92.8     97.1   5842000        95.7\n```\n:::\n\n```{.r .cell-code}\n## every 6 months\nend_mth <- endpoints(price, on='months', k=6)\nhead(price[end_mth,])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2020-06-30     133     133    131      132   2177400         130\n2020-12-31     142     144    142      144   1689900         142\n2021-06-30     144     145    143      144   1799900         142\n2021-12-31     134     135    132      132   1610900         131\n2022-06-30     122     123    121      122   2319000         121\n2022-12-30     122     122    121      122   1164400         122\n```\n:::\n:::\n\n\nSee end of **Period Calculations** section for how to get an average during periods shown: averages for each 6 month period, for example.\n\n#### Period Counts\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## get the number of weeks, months, years in the dataset (including partial)\nprice_nw <- nweeks(price)\nprice_nm <- nmonths(price)\nprice_ny <- nyears(price)\n```\n:::\n\n\nThe price data covers:\n\n-   822 days\n-   171 weeks\n-   40 months\n-   4 years (or *portions* thereof)\n\nFirst/last dates:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## get earliest date\nst_date <- start(price)\n## get last date\nend_date <- end(price)\n```\n:::\n\n\n-   Start: 2020-01-02\n-   End: 2023-04-06\n\n#### Selecting/Subsetting\n\nTime series objects make it easy to slice the data by date ranges. This is an area where time series *really* shine compared to trying to do the same thing with a data frame.\n\n-   xts is super-efficient at interpreting date ranges based on minimal info.\n-   **'/'** is a key symbol for separating dates - it is your friend.\n-   date ranges are inclusive of references used.\n\nNote that in the following examples based on stock market data, dates are missing due to gaps in data - days when markets closed.\n\n-   quickly get **entire YEAR**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## subset on a YEAR (showing head and tail to confirm data is 2021 only)\nhead(price[\"2021\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2021-01-04     143     144    138      140   3587000         138\n2021-01-05     140     141    138      141   2117800         140\n2021-01-06     139     140    136      137   2398500         135\n2021-01-07     137     141    137      141   2936200         139\n2021-01-08     141     142    140      142   1902700         140\n2021-01-11     142     142    139      141   2589800         139\n```\n:::\n\n```{.r .cell-code}\ntail(price[\"2021\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2021-12-23     131     133    131      133   1594000         132\n2021-12-27     133     134    132      133   1377300         132\n2021-12-28     133     135    133      133   1230700         132\n2021-12-29     134     134    132      133    912300         132\n2021-12-30     134     136    134      134   1177000         133\n2021-12-31     134     135    132      132   1610900         131\n```\n:::\n:::\n\n\n-   **DURING** selected month\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## get data DURING selected month\nprice[\"2020-02\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2020-02-03     108     109  104.4      105   4155500         104\n2020-02-04     106     107  105.3      107   4190500         106\n2020-02-05     109     109  107.1      108   2895700         106\n2020-02-06     109     110  108.4      110   2500600         109\n2020-02-07     109     111  108.7      109   2231300         108\n2020-02-10     109     110  108.2      109   2170800         107\n2020-02-11     109     109  107.9      109   1195300         108\n2020-02-12     110     110  108.6      110   1567200         108\n2020-02-13     109     109  108.0      109   1627000         107\n2020-02-14     109     110  108.8      110   1227500         108\n2020-02-18     109     110  108.7      109   2171400         108\n2020-02-19     110     111  109.4      110   1540000         108\n2020-02-20     109     109  107.4      109   4034000         108\n2020-02-21     108     109  106.8      108   2546900         107\n2020-02-24     105     108  105.0      107   2817100         106\n2020-02-25     108     109  105.2      105   3651300         104\n2020-02-26     106     108  105.6      107   2858000         105\n2020-02-27     104     106  102.7      103   4906200         101\n2020-02-28     100     102   98.6      101   6853700         100\n```\n:::\n:::\n\n\n-   **FROM** start of year to **END OF SPECIFIC MONTH**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## get data FROM start of a year to END OF SPECIFIC MONTH\nprice_jf <- price[\"2021/2021-02\"]\nhead(price_jf, 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2021-01-04     143     144    138      140   3587000         138\n2021-01-05     140     141    138      141   2117800         140\n2021-01-06     139     140    136      137   2398500         135\n2021-01-07     137     141    137      141   2936200         139\n```\n:::\n\n```{.r .cell-code}\ntail(price_jf, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2021-02-24     138     140    137      138   3735500         136\n2021-02-25     137     139    134      135   3042600         134\n2021-02-26     136     138    134      134   3646600         132\n```\n:::\n:::\n\n\n-   everything **BEFORE** specified date\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## get everything BEFORE specified date (based on what is avaliable)\nprice[\"/2020-01-06\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2020-01-02     108     108    107      107   1901000         106\n2020-01-03     106     108    105      107   1840300         106\n2020-01-06     107     109    107      109   2934200         107\n```\n:::\n:::\n\n\n-   everything **BETWEEN** two dates\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## get everything BETWEEN two dates\nprice[\"2021-06-01/2021-06-04\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2021-06-01     142     144    142      144   2610300         142\n2021-06-02     144     144    141      141   1522100         140\n2021-06-03     141     143    141      142   1574900         141\n2021-06-04     143     146    143      145   1919500         144\n```\n:::\n:::\n\n\n-   everything **AFTER** specified date\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## get everything AFTER specified date\nprice[\"2022-01-18/\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High  EA.Low EA.Close EA.Volume EA.Adjusted\n2022-01-18     138     143     133      134   8758900         133\n2022-01-19     136     138     135      137   3820300         136\n2022-01-20     138     142     138      139   3116900         138\n2022-01-21     138     141     138      139   3120000         138\n2022-01-24     137     139     132      135   4262100         134\n2022-01-25     134     134     130      131   2386400         130\n2022-01-26     131     132     129      130   2333800         129\n2022-01-27     131     134     131      131   1781500         130\n2022-01-28     131     132     130      132   2155000         131\n2022-01-31     131     136     129      133   4471000         132\n       ...                                                       \n2023-03-24     118     119     118      119   2527300         119\n2023-03-27     119     119     118      119   2276500         119\n2023-03-28     118     118     117      118   1551100         118\n2023-03-29     118     119     118      119   1522800         119\n2023-03-30     120     120     119      119   1979500         119\n2023-03-31     119     121     119      120   2346200         120\n2023-04-03     120     122     120      121   1946400         121\n2023-04-04     121     125     121      125   3303700         125\n2023-04-05     125     126     125      126   2564700         126\n2023-04-06     126     126     125      125   1991000         125\n```\n:::\n:::\n\n\n#### Period Calculations\n\nTime series objects lend themselves well to time-based calculations.\n\nSimple arithmetic between two dates is not as straightforward as might be expected, but still easily doable:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## subtraction of a given metric between two dates\nas.numeric(price$EA.Close[\"2022-01-21\"])-as.numeric(price$EA.Close[\"2022-01-18\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5.1\n```\n:::\n\n```{.r .cell-code}\n## subtraction of one metric from another on same date\nprice$EA.Close[\"2022-01-18\"]-price$EA.Open[\"2022-01-18\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Close\n2022-01-18    -4.53\n```\n:::\n:::\n\n\n**Lag.xts** is versatile for lag calculations, calculating differences over time:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## calculates across all columns with one command - default is 1 period but can be set with k\nhead(price-lag.xts(price))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2020-01-02      NA      NA     NA       NA        NA          NA\n2020-01-03   -2.36   -0.60  -1.64    -0.14    -60700      -0.138\n2020-01-06    1.37    1.56   1.51     1.58   1093900       1.559\n2020-01-07    2.05   -0.06   1.10    -0.39  -1241800      -0.385\n2020-01-08   -0.82    0.75   0.05     1.10    959200       1.085\n2020-01-09    1.82    0.34   0.49    -0.13   -833000      -0.128\n```\n:::\n\n```{.r .cell-code}\n## set k for longer lag - this example starting at a date beyond available data for the lag calculations, so no NAs\nhead(price[\"2020-01-13/\"]-lag.xts(price, k=7))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2020-01-13    1.11    1.72   1.86     2.48    -43600       2.446\n2020-01-14    4.08    2.42   3.59     2.38   -116900       2.348\n2020-01-15    2.84    1.14   2.51     0.83  -1455100       0.819\n2020-01-16    1.00    2.04   2.22     2.87    415900       2.831\n2020-01-17    4.19    2.99   3.77     3.44    401700       3.393\n2020-01-21    2.55    2.63   3.50     3.05    346400       3.009\n```\n:::\n\n```{.r .cell-code}\n## works for individual column\nprice$EA.Close[\"2022-01-18/\"]-lag.xts(price$EA.Close, k=2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Close\n2022-01-18     3.07\n2022-01-19     6.47\n2022-01-20     4.97\n2022-01-21     2.10\n2022-01-24    -3.68\n2022-01-25    -8.00\n2022-01-26    -5.22\n2022-01-27     0.05\n2022-01-28     1.94\n2022-01-31     1.60\n       ...         \n2023-03-24     5.87\n2023-03-27     2.60\n2023-03-28    -1.01\n2023-03-29     0.55\n2023-03-30     1.08\n2023-03-31     1.26\n2023-04-03     2.25\n2023-04-04     4.79\n2023-04-05     4.80\n2023-04-06    -0.08\n```\n:::\n:::\n\n\n**Diff** for calculating differences, based on combination of lag and difference order:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(diff(price, lag=1, differences=1))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2020-01-02      NA      NA     NA       NA        NA          NA\n2020-01-03   -2.36   -0.60  -1.64    -0.14    -60700      -0.138\n2020-01-06    1.37    1.56   1.51     1.58   1093900       1.559\n2020-01-07    2.05   -0.06   1.10    -0.39  -1241800      -0.385\n2020-01-08   -0.82    0.75   0.05     1.10    959200       1.085\n2020-01-09    1.82    0.34   0.49    -0.13   -833000      -0.128\n```\n:::\n\n```{.r .cell-code}\nhead(diff(price, lag=1, differences=2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2020-01-02      NA      NA     NA       NA        NA          NA\n2020-01-03      NA      NA     NA       NA        NA          NA\n2020-01-06    3.73    2.16   3.15     1.72   1154600        1.70\n2020-01-07    0.68   -1.62  -0.41    -1.97  -2335700       -1.94\n2020-01-08   -2.87    0.81  -1.05     1.49   2201000        1.47\n2020-01-09    2.64   -0.41   0.44    -1.23  -1792200       -1.21\n```\n:::\n:::\n\n\n-   first example: diff with lag=1, differences=1 gives same result as lag.xts with k=1 (or default)\n-   second example: diff with differences=2 gives the 'second order difference': difference between the differences.\n    -   EA.Open:\n        -   3.73 = 1.37-(-2.36)\n        -   0.68 = 2.05-1.37\n        -   -2.87 = -0.82-2.05\n        -   ...\n\nUseful for some forecasting methods, among other applications.\n\n**Returns** for calculating % change period over period:\n\n-   functions in **quantmod** package designed for financial asset prices, but can be applied to other xts data.\n-   various periodicity: daily, weekly, monthly, quarterly, yearly or ALL at once (allReturn())\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dailyReturn(price))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           daily.returns\n2020-01-02      -0.00556\n2020-01-03      -0.00130\n2020-01-06       0.01474\n2020-01-07      -0.00359\n2020-01-08       0.01015\n2020-01-09      -0.00119\n```\n:::\n\n```{.r .cell-code}\nhead(monthlyReturn(price))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           monthly.returns\n2020-01-31       -0.000185\n2020-02-28       -0.060693\n2020-03-31       -0.011838\n2020-04-30        0.140661\n2020-05-29        0.075442\n2020-06-30        0.074626\n```\n:::\n:::\n\n\n-   applied to Air Passenger xts to get % change, even though not financial returns:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(monthlyReturn(Air_xts))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         monthly.returns\nJan 1949          0.0000\nFeb 1949          0.0536\nMar 1949          0.1186\nApr 1949         -0.0227\nMay 1949         -0.0620\nJun 1949          0.1157\n```\n:::\n:::\n\n\n**Average** for period:\n\n-   Using the indexes obtained in the '**endpoints**' example at the end of the **Period/Frequency Manipulation** section above, calculate averages for the periods.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nperiod.apply(price, INDEX=end_mth, FUN=mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           EA.Open EA.High EA.Low EA.Close EA.Volume EA.Adjusted\n2020-06-30     111     113    110      112   3454968         110\n2020-12-31     133     134    131      133   2465653         131\n2021-06-30     140     142    139      140   2508342         139\n2021-12-31     138     139    136      137   2583252         136\n2022-06-30     129     131    127      129   2530396         128\n2022-12-30     126     127    125      126   1843548         126\n2023-04-06     118     119    117      118   2537080         118\n```\n:::\n:::\n\n\n**Rolling Average**:\n\nYou can also calculate a rolling (moving) average quickly with 'rollmean' function from **zoo**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## get subset of data for demo\nprice_c <- price[,'EA.Close']\nprice_c <- price_c['/2020-02-28']\n## calc rolling mean and add to original data \n## - k=3 means 3-period lag\n## - align='right' put calculated number at last date in rolling period\nprice_c$EA_CLose_rm <- rollmean(price_c, k=3, align='right')\n\n## quick dygraph - more on this below\ndygraph(price_c, width='100%')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-8f4b72741cbb901860f6\" style=\"width:100%;height:384px;\" class=\"dygraphs html-widget \"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8f4b72741cbb901860f6\">{\"x\":{\"attrs\":{\"labels\":[\"day\",\"EA.Close\",\"EA_CLose_rm\"],\"legend\":\"auto\",\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60}}},\"scale\":\"daily\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data\":[[\"2020-01-02T00:00:00.000Z\",\"2020-01-03T00:00:00.000Z\",\"2020-01-06T00:00:00.000Z\",\"2020-01-07T00:00:00.000Z\",\"2020-01-08T00:00:00.000Z\",\"2020-01-09T00:00:00.000Z\",\"2020-01-10T00:00:00.000Z\",\"2020-01-13T00:00:00.000Z\",\"2020-01-14T00:00:00.000Z\",\"2020-01-15T00:00:00.000Z\",\"2020-01-16T00:00:00.000Z\",\"2020-01-17T00:00:00.000Z\",\"2020-01-21T00:00:00.000Z\",\"2020-01-22T00:00:00.000Z\",\"2020-01-23T00:00:00.000Z\",\"2020-01-24T00:00:00.000Z\",\"2020-01-27T00:00:00.000Z\",\"2020-01-28T00:00:00.000Z\",\"2020-01-29T00:00:00.000Z\",\"2020-01-30T00:00:00.000Z\",\"2020-01-31T00:00:00.000Z\",\"2020-02-03T00:00:00.000Z\",\"2020-02-04T00:00:00.000Z\",\"2020-02-05T00:00:00.000Z\",\"2020-02-06T00:00:00.000Z\",\"2020-02-07T00:00:00.000Z\",\"2020-02-10T00:00:00.000Z\",\"2020-02-11T00:00:00.000Z\",\"2020-02-12T00:00:00.000Z\",\"2020-02-13T00:00:00.000Z\",\"2020-02-14T00:00:00.000Z\",\"2020-02-18T00:00:00.000Z\",\"2020-02-19T00:00:00.000Z\",\"2020-02-20T00:00:00.000Z\",\"2020-02-21T00:00:00.000Z\",\"2020-02-24T00:00:00.000Z\",\"2020-02-25T00:00:00.000Z\",\"2020-02-26T00:00:00.000Z\",\"2020-02-27T00:00:00.000Z\",\"2020-02-28T00:00:00.000Z\"],[107.339996337891,107.199996948242,108.779998779297,108.389999389648,109.48999786377,109.360000610352,108.589996337891,109.819999694824,109.580001831055,109.610000610352,111.26000213623,112.930000305176,112.410003662109,113.089996337891,113.480003356934,112.330001831055,110.559997558594,111.900001525879,112.209999084473,111.639999389648,107.919998168945,105.040000915527,107.069999694824,107.819999694824,110,109.089996337891,108.699996948242,109.040000915527,109.720001220703,108.839996337891,109.690002441406,109.459999084473,109.779998779297,109.199996948242,108.01000213623,107.029998779297,105.379997253418,106.540000915527,102.73999786377,101.370002746582],[null,null,107.773330688477,108.123331705729,108.886665344238,109.079999287923,109.146664937337,109.256665547689,109.329999287923,109.670000712077,110.150001525879,111.266667683919,112.200002034505,112.810000101725,112.993334452311,112.966667175293,112.123334248861,111.596666971842,111.556666056315,111.916666666667,110.589998881022,108.199999491374,106.676666259766,106.643333435059,108.296666463216,108.969998677572,109.263331095378,108.943331400553,109.153333028158,109.199999491374,109.416666666667,109.329999287923,109.643333435059,109.479998270671,108.99666595459,108.079999287923,106.806666056315,106.316665649414,104.886665344238,103.550000508626]]},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n<br />\n\n### Visualization\n\nTime series objects offer some different visualization opportunities than data frames. Below are a couple of options.\n\n#### Plot.ts\n\nYou can do a quick, simple plot with plot.ts(). Note that in this case the x-axis is the numerical index of the data point, and doesn't show the date.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot.ts(price$EA.Close)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/ts-plot-01-1.png){width=768}\n:::\n:::\n\n\n#### Dygraphs\n\nThe **dygraphs package** offers flexibility and **interactivity** for time series.\n\n-   easily show multiple metrics at once.\n-   **scroll over** to see details.\n-   **select chart area** to zoom in.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dygraphs)\ndygraph(price[,1:4], width='100%')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-c23cde7c426443819e9e\" style=\"width:100%;height:384px;\" class=\"dygraphs html-widget \"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c23cde7c426443819e9e\">{\"x\":{\"attrs\":{\"labels\":[\"day\",\"EA.Open\",\"EA.High\",\"EA.Low\",\"EA.Close\"],\"legend\":\"auto\",\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60}}},\"scale\":\"daily\",\"annotations\":[],\"shadings\":[],\"events\":[],\"format\":\"date\",\"data},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n<br />\n\n-   subset for individual columns.\n-   easily add annotations for events.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## use dyEvent to add annotations\ngraph <- dygraph(price$EA.Close, width='100%')\ngraph <- dyEvent(graph, \"2020-02-21\",\"Start of Covid 19\", labelLoc = 'top')\ngraph <- dyEvent(graph, \"2021-06-10\",\"New product announcements\", labelLoc = 'top')\n## print chart\ngraph\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-a52ea44880cb8cd8aa65\" style=\"width:100%;height:384px;\" class=\"dygraphs html-widget \"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-a52ea44880cb8cd8aa65\">{\"x\":{\"attrs\":{\"labels\":[\"day\",\"EA.Close\"],\"legend\":\"auto\",\"retainDateWindow\":false,\"axes\":{\"x\":{\"pixelsPerLabel\":60}}},\"scale\":\"daily\",\"annotations\":[],\"shadings\":[],\"events\":[{\"pos\":\"2020-02-21T00:00:00.000Z\",\"label\":\"Start of Covid 19\",\"labelLoc\":\"top\",\"color\":\"black\",\"strokePattern\":[7,3],\"axis\":\"x\"},{\"pos\":\"2021-06-10T00:00:00.000Z\",\"label\":\"New product announcements\",\"labelLoc\":\"top\",\"color\":\"black\",\"strokePattern\":[7,3],\"axis\":\"x\"}],\"format\":\"date\",\"data\":[[\"2020-01-02T00:00:00.000Z\",\"2020-01-03T00:00:00.000Z\",\"2020-01-06T00:00:00.000Z\",\"2020-01-07T00:00:00.000Z\",\"2020-01-08T00:00:00.000Z\",\"2020-01-09T00:00:00.000Z\",\"2020-01-10T00:00:00.000Z\",\"2020-01-13T00:00:00.000Z\",\"2020-01-14T00:00:00.000Z\",\"2020-01-15T00:00:00.000Z\",\"2020-01-16T00:00:00.000Z\",\"2020-01-17T00:00:00.000Z\",\"2020-01-21T00:00:00.000Z\",\"2020-01-22T00:00:00.000Z\",\"2020-01-23T00:00:00.000Z\",\"2020-01-24T00:00:00.000Z\",\"2020-01-27T00:00:00.000Z\",\"2020-01-28T00:00:00.000Z\",\"2020-01-29T00:00:00.000Z\",\"2020-01-30T00:00:00.000Z\",\"2020-01-31T00:00:00.000Z\",\"2020-02-03T00:00:00.000Z\",\"2020-02-04T00:00:00.000Z\",\"2020-02-05T00:00:00.000Z\",\"2020-02-06T00:00:00.000Z\",\"2020-02-07T00:00:00.000Z\",\"2020-02-10T00:00:00.000Z\",\"2020-02-11T00:00:00.000Z\",\"2020-02-12T00:00:00.000Z\",\"2020-02-13T00:00:00.000Z\",\"2020-02-14T00:00:00.000Z\",\"2020-02-18T00:00:00.000Z\",\"2020-02-19T00:00:00.000Z\",\"2020-02-20T00:00:00.000Z\",\"2020-02-21T00:00:00.000Z\",\"2020-02-24T00:00:00.000Z\",\"2020-02-25T00:00:00.000Z\",\"2020-02-26T00:00:00.000Z\",\"2020-02-27T00:00:00.000Z\",\"2020-02-28T00:00:00.000Z\",\"2020-03-02T00:00:00.000Z\",\"2020-03-03T00:00:00.000Z\",\"2020-03-04T00:00:00.000Z\",\"2020-03-05T00:00:00.000Z\",\"2020-03-06T00:00:00.000Z\",\"2020-03-09T00:00:00.000Z\",\"2020-03-10T00:00:00.000Z\",\"2020-03-11T00:00:00.000Z\",\"2020-03-12T00:00:00.000Z\",\"2020-03-13T00:00:00.000Z\",\"2020-03-16T00:00:00.000Z\",\"2020-03-17T00:00:00.000Z\",\"2020-03-18T00:00:00.000Z\",\"2020-03-19T00:00:00.000Z\",\"2020-03-20T00:00:00.000Z\",\"2020-03-23T00:00:00.000Z\",\"2020-03-24T00:00:00.000Z\",\"2020-03-25T00:00:00.000Z\",\"2020-03-26T00:00:00.000Z\",\"2020-03-27T00:00:00.000Z\",\"2020-03-30T00:00:00.000Z\",\"2020-03-31T00:00:00.000Z\",\"2020-04-01T00:00:00.000Z\",\"2020-04-02T00:00:00.000Z\",\"2020-04-03T00:00:00.000Z\",\"2020-04-06T00:00:00.000Z\",\"2020-04-07T00:00:00.000Z\",\"2020-04-08T00:00:00.000Z\",\"2020-04-09T00:00:00.000Z\",\"2020-04-13T00:00:00.000Z\",\"2020-04-14T00:00:00.000Z\",\"2020-04-15T00:00:00.000Z\",\"2020-04-16T00:00:00.000Z\",\"2020-04-17T00:00:00.000Z\",\"2020-04-20T00:00:00.000Z\",\"2020-04-21T00:00:00.000Z\",\"2020-04-22T00:00:00.000Z\",\"2020-04-23T00:00:00.000Z\",\"2020-04-24T00:00:00.000Z\",\"2020-04-27T00:00:00.000Z\",\"2020-04-28T00:00:00.000Z\",\"2020-04-29T00:00:00.000Z\",\"2020-04-30T00:00:00.000Z\",\"2020-05-01T00:00:00.000Z\",\"2020-05-04T00:00:00.000Z\",\"2020-05-05T00:00:00.000Z\",\"2020-05-06T00:00:00.000Z\",\"2020-05-07T00:00:00.000Z\",\"2020-05-08T00:00:00.000Z\",\"2020-05-11T00:00:00.000Z\",\"2020-05-12T00:00:00.000Z\",\"2020-05-13T00:00:00.000Z\",\"2020-05-14T00:00:00.000Z\",\"2020-05-15T00:00:00.000Z\",\"2020-05-18T00:00:00.000Z\",\"2020-05-19T00:00:00.000Z\",\"2020-05-20T00:00:00.000Z\",\"2020-05-21T00:00:00.000Z\",\"2020-05-22T00:00:00.000Z\",\"2020-05-26T00:00:00.000Z\",\"2020-05-27T00:00:00.000Z\",\"2020-05-28T00:00:00.000Z\",\"2020-05-29T00:00:00.000Z\",\"2020-06-01T00:00:00.000Z\",\"2020-06-02T00:00:00.000Z\",\"2020-06-03T00:00:00.000Z\",\"2020-06-04T00:00:00.000Z\",\"2020-06-05T00:00:00.000Z\",\"2020-06-08T00:00:00.000Z\",\"2020-06-09T00:00:00.000Z\",\"2020-06-10T00:00:00.000Z\",\"2020-06-11T00:00:00.000Z\",\"2020-06-12T00:00:00.000Z\",\"2020-06-15T00:00:00.000Z\",\"2020-06-16T00:00:00.000Z\",\"2020-06-17T00:00:00.000Z\",\"2020-06-18T00:00:00.000Z\",\"2020-06-19T00:00:00.000Z\",\"2020-06-22T00:00:00.000Z\",\"2020-06-23T00:00:00.000Z\",\"2020-06-24T00:00:00.000Z\",\"2020-06-25T00:00:00.000Z\",\"2020-06-26T00:00:00.000Z\",\"2020-06-29T00:00:00.000Z\",\"2020-06-30T00:00:00.000Z\",\"2020-07-01T00:00:00.000Z\",\"2020-07-02T00:00:00.000Z\",\"2020-07-06T00:00:00.000Z\",\"2020-07-07T00:00:00.000Z\",\"2020-07-08T00:00:00.000Z\",\"2020-07-09T00:00:00.000Z\",\"2020-07-10T00:00:00.000Z\",\"2020-07-13T00:00:00.000Z\",\"2020-07-14T00:00:00.000Z\",\"2020-07-15T00:00:00.000Z\",\"2020-07-16T00:00:00.000Z\",\"2020-07-17T00:00:00.000Z\",\"2020-07-20T00:00:00.000Z\",\"2020-07-21T00:00:00.000Z\",\"2020-07-22T00:00:00.000Z\",\"2020-07-23T00:00:00.000Z\",\"2020-07-24T00:00:00.000Z\",\"2020-07-27T00:00:00.000Z\",\"2020-07-28T00:00:00.000Z\",\"2020-07-29T00:00:00.000Z\",\"2020-07-30T00:00:00.000Z\",\"2020-07-31T00:00:00.000Z\",\"2020-08-03T00:00:00.000Z\",\"2020-08-04T00:00:00.000Z\",\"2020-08-05T00:00:00.000Z\",\"2020-08-06T00:00:00.000Z\",\"2020-08-07T00:00:00.000Z\",\"2020-08-10T00:00:00.000Z\",\"2020-08-11T00:00:00.000Z\",\"2020-08-12T00:00:00.000Z\",\"2020-08-13T00:00:00.000Z\",\"2020-08-14T00:00:00.000Z\",\"2020-08-17T00:00:00.000Z\",\"2020-08-18T00:00:00.000Z\",\"2020-08-19T00:00:00.000Z\",\"2020-08-20T00:00:00.000Z\",\"2020-08-21T00:00:00.000Z\",\"2020-08-24T00:00:00.000Z\",\"2020-08-25T00:00:00.000Z\",\"2020-08-26T00:00:00.000Z\",\"2020-08-27T00:00:00.000Z\",\"2020-08-28T00:00:00.000Z\",\"2020-08-31T00:00:00.000Z\",\"2020-09-01T00:00:00.000Z\",\"2020-09-02T00:00:00.000Z\",\"2020-09-03T00:00:00.000Z\",\"2020-09-04T00:00:00.000Z\",\"2020-09-08T00:00:00.000Z\",\"2020-09-09T00:00:00.000Z\",\"2020-09-10T00:00:00.000Z\",\"2020-09-11T00:00:00.000Z\",\"2020-09-14T00:00:00.000Z\",\"2020-09-15T00:00:00.000Z\",\"2020-09-16T00:00:00.000Z\",\"2020-09-17T00:00:00.000Z\",\"2020-09-18T00:00:00.000Z\",\"2020-09-21T00:00:00.000Z\",\"2020-09-22T00:00:00.000Z\",\"2020-09-23T00:00:00.000Z\",\"2020-09-24T00:00:00.000Z\",\"2020-09-25T00:00:00.000Z\",\"2020-09-28T00:00:00.000Z\",\"2020-09-29T00:00:00.000Z\",\"2020-09-30T00:00:00.000Z\",\"2020-10-01T00:00:00.000Z\",\"2020-10-02T00:00:00.000Z\",\"2020-10-05T00:00:00.000Z\",\"2020-10-06T00:00:00.000Z\",\"2020-10-07T00:00:00.000Z\",\"2020-10-08T00:00:00.000Z\",\"2020-10-09T00:00:00.000Z\",\"2020-10-12T00:00:00.000Z\",\"2020-10-13T00:00:00.000Z\",\"2020-10-14T00:00:00.000Z\",\"2020-10-15T00:00:00.000Z\",\"2020-10-16T00:00:00.000Z\",\"2020-10-19T00:00:00.000Z\",\"2020-10-20T00:00:00.000Z\",\"2020-10-21T00:00:00.000Z\",\"2020-10-22T00:00:00.000Z\",\"2020-10-23T00:00:00.000Z\",\"2020-10-26T00:00:00.000Z\",\"2020-10-27T00:00:00.000Z\",\"2020-10-28T00:00:00.000Z\",\"2020-10-29T00:00:00.000Z\",\"2020-10-30T00:00:00.000Z\",\"2020-11-02T00:00:00.000Z\",\"2020-11-03T00:00:00.000Z\",\"2020-11-04T00:00:00.000Z\",\"2020-11-05T00:00:00.000Z\",\"2020-11-06T00:00:00.000Z\",\"2020-11-09T00:00:00.000Z\",\"2020-11-10T00:00:00.000Z\",\"2020-11-11T00:00:00.000Z\",\"2020-11-12T00:00:00.000Z\",\"2020-11-13T00:00:00.000Z\",\"2020-11-16T00:00:00.000Z\",\"2020-11-17T00:00:00.000Z\",\"2020-11-18T00:00:00.000Z\",\"2020-11-19T00:00:00.000Z\",\"2020-11-20T00:00:00.000Z\",\"2020-11-23T00:00:00.000Z\",\"2020-11-24T00:00:00.000Z\",\"2020-11-25T00:00:00.000Z\",\"2020-11-27T00:00:00.000Z\",\"2020-11-30T00:00:00.000Z\",\"2020-12-01T00:00:00.000Z\",\"2020-12-02T00:00:00.000Z\",\"2020-12-03T00:00:00.000Z\",\"2020-12-04T00:00:00.000Z\",\"2020-12-07T00:00:00.000Z\",\"2020-12-08T00:00:00.000Z\",\"2020-12-09T00:00:00.000Z\",\"2020-12-10T00:00:00.000Z\",\"2020-12-11T00:00:00.000Z\",\"2020-12-14T00:00:00.000Z\",\"2020-12-15T00:00:00.000Z\",\"2020-12-16T00:00:00.000Z\",\"2020-12-17T00:00:00.000Z\",\"2020-12-18T00:00:00.000Z\",\"2020-12-21T00:00:00.000Z\",\"2020-12-22T00:00:00.000Z\",\"2020-12-23T00:00:00.000Z\",\"2020-12-24T00:00:00.000Z\",\"2020-12-28T00:00:00.000Z\",\"2020-12-29T00:00:00.000Z\",\"2020-12-30T00:00:00.000Z\",\"2020-12-31T00:00:00.000Z\",\"2021-01-04T00:00:00.000Z\",\"2021-01-05T00:00:00.000Z\",\"2021-01-06T00:00:00.000Z\",\"2021-01-07T00:00:00.000Z\",\"2021-01-08T00:00:00.000Z\",\"2021-01-11T00:00:00.000Z\",\"2021-01-12T00:00:00.000Z\",\"2021-01-13T00:00:00.000Z\",\"2021-01-14T00:00:00.000Z\",\"2021-01-15T00:00:00.000Z\",\"2021-01-19T00:00:00.000Z\",\"2021-01-20T00:00:00.000Z\",\"2021-01-21T00:00:00.000Z\",\"2021-01-22T00:00:00.000Z\",\"2021-01-25T00:00:00.000Z\",\"2021-01-26T00:00:00.000Z\",\"2021-01-27T00:00:00.000Z\",\"2021-01-28T00:00:00.000Z\",\"2021-01-29T00:00:00.000Z\",\"2021-02-01T00:00:00.000Z\",\"2021-02-02T00:00:00.000Z\",\"2021-02-03T00:00:00.000Z\",\"2021-02-04T00:00:00.000Z\",\"2021-02-05T00:00:00.000Z\",\"2021-02-08T00:00:00.000Z\",\"2021-02-09T00:00:00.000Z\",\"2021-02-10T00:00:00.000Z\",\"2021-02-11T00:00:00.000Z\",\"2021-02-12T00:00:00.000Z\",\"2021-02-16T00:00:00.000Z\",\"2021-02-17T00:00:00.000Z\",\"2021-02-18T00:00:00.000Z\",\"2021-02-19T00:00:00.000Z\",\"2021-02-22T00:00:00.000Z\",\"2021-02-23T00:00:00.000Z\",\"2021-02-24T00:00:00.000Z\",\"2021-02-25T00:00:00.000Z\",\"2021-02-26T00:00:00.000Z\",\"2021-03-01T00:00:00.000Z\",\"2021-03-02T00:00:00.000Z\",\"2021-03-03T00:00:00.000Z\",\"2021-03-04T00:00:00.000Z\",\"2021-03-05T00:00:00.000Z\",\"2021-03-08T00:00:00.000Z\",\"2021-03-09T00:00:00.000Z\",\"2021-03-10T00:00:00.000Z\",\"2021-03-11T00:00:00.000Z\",\"2021-03-12T00:00:00.000Z\",\"2021-03-15T00:00:00.000Z\",\"2021-03-16T00:00:00.000Z\",\"2021-03-17T00:00:00.000Z\",\"2021-03-18T00:00:00.000Z\",\"2021-03-19T00:00:00.000Z\",\"2021-03-22T00:00:00.000Z\",\"2021-03-23T00:00:00.000Z\",\"2021-03-24T00:00:00.000Z\",\"2021-03-25T00:00:00.000Z\",\"2021-03-26T00:00:00.000Z\",\"2021-03-29T00:00:00.000Z\",\"2021-03-30T00:00:00.000Z\",\"2021-03-31T00:00:00.000Z\",\"2021-04-01T00:00:00.000Z\",\"2021-04-05T00:00:00.000Z\",\"2021-04-06T00:00:00.000Z\",\"2021-04-07T00:00:00.000Z\",\"2021-04-08T00:00:00.000Z\",\"2021-04-09T00:00:00.000Z\",\"2021-04-12T00:00:00.000Z\",\"2021-04-13T00:00:00.000Z\",\"2021-04-14T00:00:00.000Z\",\"2021-04-15T00:00:00.000Z\",\"2021-04-16T00:00:00.000Z\",\"2021-04-19T00:00:00.000Z\",\"2021-04-20T00:00:00.000Z\",\"2021-04-21T00:00:00.000Z\",\"2021-04-22T00:00:00.000Z\",\"2021-04-23T00:00:00.000Z\",\"2021-04-26T00:00:00.000Z\",\"2021-04-27T00:00:00.000Z\",\"2021-04-28T00:00:00.000Z\",\"2021-04-29T00:00:00.000Z\",\"2021-04-30T00:00:00.000Z\",\"2021-05-03T00:00:00.000Z\",\"2021-05-04T00:00:00.000Z\",\"2021-05-05T00:00:00.000Z\",\"2021-05-06T00:00:00.000Z\",\"2021-05-07T00:00:00.000Z\",\"2021-05-10T00:00:00.000Z\",\"2021-05-11T00:00:00.000Z\",\"2021-05-12T00:00:00.000Z\",\"2021-05-13T00:00:00.000Z\",\"2021-05-14T00:00:00.000Z\",\"2021-05-17T00:00:00.000Z\",\"2021-05-18T00:00:00.000Z\",\"2021-05-19T00:00:00.000Z\",\"2021-05-20T00:00:00.000Z\",\"2021-05-21T00:00:00.000Z\",\"2021-05-24T00:00:00.000Z\",\"2021-05-25T00:00:00.000Z\",\"2021-05-26T00:00:00.000Z\",\"2021-05-27T00:00:00.000Z\",\"2021-05-28T00:00:00.000Z\",\"2021-06-01T00:00:00.000Z\",\"2021-06-02T00:00:00.000Z\",\"2021-06-03T00:00:00.000Z\",\"2021-06-04T00:00:00.000Z\",\"2021-06-07T00:00:00.000Z\",\"2021-06-08T00:00:00.000Z\",\"2021-06-09T00:00:00.000Z\",\"2021-06-10T00:00:00.000Z\",\"2021-06-11T00:00:00.000Z\",\"2021-06-14T00:00:00.000Z\",\"2021-06-15T00:00:00.000Z\",\"2021-06-16T00:00:00.000Z\",\"2021-06-17T00:00:00.000Z\",\"2021-06-18T00:00:00.000Z\",\"2021-06-21T00:00:00.000Z\",\"2021-06-22T00:00:00.000Z\",\"2021-06-23T00:00:00.000Z\",\"2021-06-24T00:00:00.000Z\",\"2021-06-25T00:00:00.000Z\",\"2021-06-28T00:00:00.000Z\",\"2021-06-29T00:00:00.000Z\",\"2021-06-30T00:00:00.000Z\",\"2021-07-01T00:00:00.000Z\",\"2021-07-02T00:00:00.000Z\",\"2021-07-06T00:00:00.000Z\",\"2021-07-07T00:00:00.000Z\",\"2021-07-08T00:00:00.000Z\",\"2021-07-09T00:00:00.000Z\",\"2021-07-12T00:00:00.000Z\",\"2021-07-13T00:00:00.000Z\",\"2021-07-14T00:00:00.000Z\",\"2021-07-15T00:00:00.000Z\",\"2021-07-16T00:00:00.000Z\",\"2021-07-19T00:00:00.000Z\",\"2021-07-20T00:00:00.000Z\",\"2021-07-21T00:00:00.000Z\",\"2021-07-22T00:00:00.000Z\",\"2021-07-23T00:00:00.000Z\",\"2021-07-26T00:00:00.000Z\",\"2021-07-27T00:00:00.000Z\",\"2021-07-28T00:00:00.000Z\",\"2021-07-29T00:00:00.000Z\",\"2021-07-30T00:00:00.000Z\",\"2021-08-02T00:00:00.000Z\",\"2021-08-03T00:00:00.000Z\",\"2021-08-04T00:00:00.000Z\",\"2021-08-05T00:00:00.000Z\",\"2021-08-06T00:00:00.000Z\",\"2021-08-09T00:00:00.000Z\",\"2021-08-10T00:00:00.000Z\",\"2021-08-11T00:00:00.000Z\",\"2021-08-12T00:00:00.000Z\",\"2021-08-13T00:00:00.000Z\",\"2021-08-16T00:00:00.000Z\",\"2021-08-17T00:00:00.000Z\",\"2021-08-18T00:00:00.000Z\",\"2021-08-19T00:00:00.000Z\",\"2021-08-20T00:00:00.000Z\",\"2021-08-23T00:00:00.000Z\",\"2021-08-24T00:00:00.000Z\",\"2021-08-25T00:00:00.000Z\",\"2021-08-26T00:00:00.000Z\",\"2021-08-27T00:00:00.000Z\",\"2021-08-30T00:00:00.000Z\",\"2021-08-31T00:00:00.000Z\",\"2021-09-01T00:00:00.000Z\",\"2021-09-02T00:00:00.000Z\",\"2021-09-03T00:00:00.000Z\",\"2021-09-07T00:00:00.000Z\",\"2021-09-08T00:00:00.000Z\",\"2021-09-09T00:00:00.000Z\",\"2021-09-10T00:00:00.000Z\",\"2021-09-13T00:00:00.000Z\",\"2021-09-14T00:00:00.000Z\",\"2021-09-15T00:00:00.000Z\",\"2021-09-16T00:00:00.000Z\",\"2021-09-17T00:00:00.000Z\",\"2021-09-20T00:00:00.000Z\",\"2021-09-21T00:00:00.000Z\",\"2021-09-22T00:00:00.000Z\",\"2021-09-23T00:00:00.000Z\",\"2021-09-24T00:00:00.000Z\",\"2021-09-27T00:00:00.000Z\",\"2021-09-28T00:00:00.000Z\",\"2021-09-29T00:00:00.000Z\",\"2021-09-30T00:00:00.000Z\",\"2021-10-01T00:00:00.000Z\",\"2021-10-04T00:00:00.000Z\",\"2021-10-05T00:00:00.000Z\",\"2021-10-06T00:00:00.000Z\",\"2021-10-07T00:00:00.000Z\",\"2021-10-08T00:00:00.000Z\",\"2021-10-11T00:00:00.000Z\",\"2021-10-12T00:00:00.000Z\",\"2021-10-13T00:00:00.000Z\",\"2021-10-14T00:00:00.000Z\",\"2021-10-15T00:00:00.000Z\",\"2021-10-18T00:00:00.000Z\",\"2021-10-19T00:00:00.000Z\",\"2021-10-20T00:00:00.000Z\",\"2021-10-21T00:00:00.000Z\",\"2021-10-22T00:00:00.000Z\",\"2021-10-25T00:00:00.000Z\",\"2021-10-26T00:00:00.000Z\",\"2021-10-27T00:00:00.000Z\",\"2021-10-28T00:00:00.000Z\",\"2021-10-29T00:00:00.000Z\",\"2021-11-01T00:00:00.000Z\",\"2021-11-02T00:00:00.000Z\",\"2021-11-03T00:00:00.000Z\",\"2021-11-04T00:00:00.000Z\",\"2021-11-05T00:00:00.000Z\",\"2021-11-08T00:00:00.000Z\",\"2021-11-09T00:00:00.000Z\",\"2021-11-10T00:00:00.000Z\",\"2021-11-11T00:00:00.000Z\",\"2021-11-12T00:00:00.000Z\",\"2021-11-15T00:00:00.000Z\",\"2021-11-16T00:00:00.000Z\",\"2021-11-17T00:00:00.000Z\",\"2021-11-18T00:00:00.000Z\",\"2021-11-19T00:00:00.000Z\",\"2021-11-22T00:00:00.000Z\",\"2021-11-23T00:00:00.000Z\",\"2021-11-24T00:00:00.000Z\",\"2021-11-26T00:00:00.000Z\",\"2021-11-29T00:00:00.000Z\",\"2021-11-30T00:00:00.000Z\",\"2021-12-01T00:00:00.000Z\",\"2021-12-02T00:00:00.000Z\",\"2021-12-03T00:00:00.000Z\",\"2021-12-06T00:00:00.000Z\",\"2021-12-07T00:00:00.000Z\",\"2021-12-08T00:00:00.000Z\",\"2021-12-09T00:00:00.000Z\",\"2021-12-10T00:00:00.000Z\",\"2021-12-13T00:00:00.000Z\",\"2021-12-14T00:00:00.000Z\",\"2021-12-15T00:00:00.000Z\",\"2021-12-16T00:00:00.000Z\",\"2021-12-17T00:00:00.000Z\",\"2021-12-20T00:00:00.000Z\",\"2021-12-21T00:00:00.000Z\",\"2021-12-22T00:00:00.000Z\",\"2021-12-23T00:00:00.000Z\",\"2021-12-27T00:00:00.000Z\",\"2021-12-28T00:00:00.000Z\",\"2021-12-29T00:00:00.000Z\",\"2021-12-30T00:00:00.000Z\",\"2021-12-31T00:00:00.000Z\",\"2022-01-03T00:00:00.000Z\",\"2022-01-04T00:00:00.000Z\",\"2022-01-05T00:00:00.000Z\",\"2022-01-06T00:00:00.000Z\",\"2022-01-07T00:00:00.000Z\",\"2022-01-10T00:00:00.000Z\",\"2022-01-11T00:00:00.000Z\",\"2022-01-12T00:00:00.000Z\",\"2022-01-13T00:00:00.000Z\",\"2022-01-14T00:00:00.000Z\",\"2022-01-18T00:00:00.000Z\",\"2022-01-19T00:00:00.000Z\",\"2022-01-20T00:00:00.000Z\",\"2022-01-21T00:00:00.000Z\",\"2022-01-24T00:00:00.000Z\",\"2022-01-25T00:00:00.000Z\",\"2022-01-26T00:00:00.000Z\",\"2022-01-27T00:00:00.000Z\",\"2022-01-28T00:00:00.000Z\",\"2022-01-31T00:00:00.000Z\",\"2022-02-01T00:00:00.000Z\",\"2022-02-02T00:00:00.000Z\",\"2022-02-03T00:00:00.000Z\",\"2022-02-04T00:00:00.000Z\",\"2022-02-07T00:00:00.000Z\",\"2022-02-08T00:00:00.000Z\",\"2022-02-09T00:00:00.000Z\",\"2022-02-10T00:00:00.000Z\",\"2022-02-11T00:00:00.000Z\",\"2022-02-14T00:00:00.000Z\",\"2022-02-15T00:00:00.000Z\",\"2022-02-16T00:00:00.000Z\",\"2022-02-17T00:00:00.000Z\",\"2022-02-18T00:00:00.000Z\",\"2022-02-22T00:00:00.000Z\",\"2022-02-23T00:00:00.000Z\",\"2022-02-24T00:00:00.000Z\",\"2022-02-25T00:00:00.000Z\",\"2022-02-28T00:00:00.000Z\",\"2022-03-01T00:00:00.000Z\",\"2022-03-02T00:00:00.000Z\",\"2022-03-03T00:00:00.000Z\",\"2022-03-04T00:00:00.000Z\",\"2022-03-07T00:00:00.000Z\",\"2022-03-08T00:00:00.000Z\",\"2022-03-09T00:00:00.000Z\",\"2022-03-10T00:00:00.000Z\",\"2022-03-11T00:00:00.000Z\",\"2022-03-14T00:00:00.000Z\",\"2022-03-15T00:00:00.000Z\",\"2022-03-16T00:00:00.000Z\",\"2022-03-17T00:00:00.000Z\",\"2022-03-18T00:00:00.000Z\",\"2022-03-21T00:00:00.000Z\",\"2022-03-22T00:00:00.000Z\",\"2022-03-23T00:00:00.000Z\",\"2022-03-24T00:00:00.000Z\",\"2022-03-25T00:00:00.000Z\",\"2022-03-28T00:00:00.000Z\",\"2022-03-29T00:00:00.000Z\",\"2022-03-30T00:00:00.000Z\",\"2022-03-31T00:00:00.000Z\",\"2022-04-01T00:00:00.000Z\",\"2022-04-04T00:00:00.000Z\",\"2022-04-05T00:00:00.000Z\",\"2022-04-06T00:00:00.000Z\",\"2022-04-07T00:00:00.000Z\",\"2022-04-08T00:00:00.000Z\",\"2022-04-11T00:00:00.000Z\",\"2022-04-12T00:00:00.000Z\",\"2022-04-13T00:00:00.000Z\",\"2022-04-14T00:00:00.000Z\",\"2022-04-18T00:00:00.000Z\",\"2022-04-19T00:00:00.000Z\",\"2022-04-20T00:00:00.000Z\",\"2022-04-21T00:00:00.000Z\",\"2022-04-22T00:00:00.000Z\",\"2022-04-25T00:00:00.000Z\",\"2022-04-26T00:00:00.000Z\",\"2022-04-27T00:00:00.000Z\",\"2022-04-28T00:00:00.000Z\",\"2022-04-29T00:00:00.000Z\",\"2022-05-02T00:00:00.000Z\",\"2022-05-03T00:00:00.000Z\",\"2022-05-04T00:00:00.000Z\",\"2022-05-05T00:00:00.000Z\",\"2022-05-06T00:00:00.000Z\",\"2022-05-09T00:00:00.000Z\",\"2022-05-10T00:00:00.000Z\",\"2022-05-11T00:00:00.000Z\",\"2022-05-12T00:00:00.000Z\",\"2022-05-13T00:00:00.000Z\",\"2022-05-16T00:00:00.000Z\",\"2022-05-17T00:00:00.000Z\",\"2022-05-18T00:00:00.000Z\",\"2022-05-19T00:00:00.000Z\",\"2022-05-20T00:00:00.000Z\",\"2022-05-23T00:00:00.000Z\",\"2022-05-24T00:00:00.000Z\",\"2022-05-25T00:00:00.000Z\",\"2022-05-26T00:00:00.000Z\",\"2022-05-27T00:00:00.000Z\",\"2022-05-31T00:00:00.000Z\",\"2022-06-01T00:00:00.000Z\",\"2022-06-02T00:00:00.000Z\",\"2022-06-03T00:00:00.000Z\",\"2022-06-06T00:00:00.000Z\",\"2022-06-07T00:00:00.000Z\",\"2022-06-08T00:00:00.000Z\",\"2022-06-09T00:00:00.000Z\",\"2022-06-10T00:00:00.000Z\",\"2022-06-13T00:00:00.000Z\",\"2022-06-14T00:00:00.000Z\",\"2022-06-15T00:00:00.000Z\",\"2022-06-16T00:00:00.000Z\",\"2022-06-17T00:00:00.000Z\",\"2022-06-21T00:00:00.000Z\",\"2022-06-22T00:00:00.000Z\",\"2022-06-23T00:00:00.000Z\",\"2022-06-24T00:00:00.000Z\",\"2022-06-27T00:00:00.000Z\",\"2022-06-28T00:00:00.000Z\",\"2022-06-29T00:00:00.000Z\",\"2022-06-30T00:00:00.000Z\",\"2022-07-01T00:00:00.000Z\",\"2022-07-05T00:00:00.000Z\",\"2022-07-06T00:00:00.000Z\",\"2022-07-07T00:00:00.000Z\",\"2022-07-08T00:00:00.000Z\",\"2022-07-11T00:00:00.000Z\",\"2022-07-12T00:00:00.000Z\",\"2022-07-13T00:00:00.000Z\",\"2022-07-14T00:00:00.000Z\",\"2022-07-15T00:00:00.000Z\",\"2022-07-18T00:00:00.000Z\",\"2022-07-19T00:00:00.000Z\",\"2022-07-20T00:00:00.000Z\",\"2022-07-21T00:00:00.000Z\",\"2022-07-22T00:00:00.000Z\",\"2022-07-25T00:00:00.000Z\",\"2022-07-26T00:00:00.000Z\",\"2022-07-27T00:00:00.000Z\",\"2022-07-28T00:00:00.000Z\",\"2022-07-29T00:00:00.000Z\",\"2022-08-01T00:00:00.000Z\",\"2022-08-02T00:00:00.000Z\",\"2022-08-03T00:00:00.000Z\",\"2022-08-04T00:00:00.000Z\",\"2022-08-05T00:00:00.000Z\",\"2022-08-08T00:00:00.000Z\",\"2022-08-09T00:00:00.000Z\",\"2022-08-10T00:00:00.000Z\",\"2022-08-11T00:00:00.000Z\",\"2022-08-12T00:00:00.000Z\",\"2022-08-15T00:00:00.000Z\",\"2022-08-16T00:00:00.000Z\",\"2022-08-17T00:00:00.000Z\",\"2022-08-18T00:00:00.000Z\",\"2022-08-19T00:00:00.000Z\",\"2022-08-22T00:00:00.000Z\",\"2022-08-23T00:00:00.000Z\",\"2022-08-24T00:00:00.000Z\",\"2022-08-25T00:00:00.000Z\",\"2022-08-26T00:00:00.000Z\",\"2022-08-29T00:00:00.000Z\",\"2022-08-30T00:00:00.000Z\",\"2022-08-31T00:00:00.000Z\",\"2022-09-01T00:00:00.000Z\",\"2022-09-02T00:00:00.000Z\",\"2022-09-06T00:00:00.000Z\",\"2022-09-07T00:00:00.000Z\",\"2022-09-08T00:00:00.000Z\",\"2022-09-09T00:00:00.000Z\",\"2022-09-12T00:00:00.000Z\",\"2022-09-13T00:00:00.000Z\",\"2022-09-14T00:00:00.000Z\",\"2022-09-15T00:00:00.000Z\",\"2022-09-16T00:00:00.000Z\",\"2022-09-19T00:00:00.000Z\",\"2022-09-20T00:00:00.000Z\",\"2022-09-21T00:00:00.000Z\",\"2022-09-22T00:00:00.000Z\",\"2022-09-23T00:00:00.000Z\",\"2022-09-26T00:00:00.000Z\",\"2022-09-27T00:00:00.000Z\",\"2022-09-28T00:00:00.000Z\",\"2022-09-29T00:00:00.000Z\",\"2022-09-30T00:00:00.000Z\",\"2022-10-03T00:00:00.000Z\",\"2022-10-04T00:00:00.000Z\",\"2022-10-05T00:00:00.000Z\",\"2022-10-06T00:00:00.000Z\",\"2022-10-07T00:00:00.000Z\",\"2022-10-10T00:00:00.000Z\",\"2022-10-11T00:00:00.000Z\",\"2022-10-12T00:00:00.000Z\",\"2022-10-13T00:00:00.000Z\",\"2022-10-14T00:00:00.000Z\",\"2022-10-17T00:00:00.000Z\",\"2022-10-18T00:00:00.000Z\",\"2022-10-19T00:00:00.000Z\",\"2022-10-20T00:00:00.000Z\",\"2022-10-21T00:00:00.000Z\",\"2022-10-24T00:00:00.000Z\",\"2022-10-25T00:00:00.000Z\",\"2022-10-26T00:00:00.000Z\",\"2022-10-27T00:00:00.000Z\",\"2022-10-28T00:00:00.000Z\",\"2022-10-31T00:00:00.000Z\",\"2022-11-01T00:00:00.000Z\",\"2022-11-02T00:00:00.000Z\",\"2022-11-03T00:00:00.000Z\",\"2022-11-04T00:00:00.000Z\",\"2022-11-07T00:00:00.000Z\",\"2022-11-08T00:00:00.000Z\",\"2022-11-09T00:00:00.000Z\",\"2022-11-10T00:00:00.000Z\",\"2022-11-11T00:00:00.000Z\",\"2022-11-14T00:00:00.000Z\",\"2022-11-15T00:00:00.000Z\",\"2022-11-16T00:00:00.000Z\",\"2022-11-17T00:00:00.000Z\",\"2022-11-18T00:00:00.000Z\",\"2022-11-21T00:00:00.000Z\",\"2022-11-22T00:00:00.000Z\",\"2022-11-23T00:00:00.000Z\",\"2022-11-25T00:00:00.000Z\",\"2022-11-28T00:00:00.000Z\",\"2022-11-29T00:00:00.000Z\",\"2022-11-30T00:00:00.000Z\",\"2022-12-01T00:00:00.000Z\",\"2022-12-02T00:00:00.000Z\",\"2022-12-05T00:00:00.000Z\",\"2022-12-06T00:00:00.000Z\",\"2022-12-07T00:00:00.000Z\",\"2022-12-08T00:00:00.000Z\",\"2022-12-09T00:00:00.000Z\",\"2022-12-12T00:00:00.000Z\",\"2022-12-13T00:00:00.000Z\",\"2022-12-14T00:00:00.000Z\",\"2022-12-15T00:00:00.000Z\",\"2022-12-16T00:00:00.000Z\",\"2022-12-19T00:00:00.000Z\",\"2022-12-20T00:00:00.000Z\",\"2022-12-21T00:00:00.000Z\",\"2022-12-22T00:00:00.000Z\",\"2022-12-23T00:00:00.000Z\",\"2022-12-27T00:00:00.000Z\",\"2022-12-28T00:00:00.000Z\",\"2022-12-29T00:00:00.000Z\",\"2022-12-30T00:00:00.000Z\",\"2023-01-03T00:00:00.000Z\",\"2023-01-04T00:00:00.000Z\",\"2023-01-05T00:00:00.000Z\",\"2023-01-06T00:00:00.000Z\",\"2023-01-09T00:00:00.000Z\",\"2023-01-10T00:00:00.000Z\",\"2023-01-11T00:00:00.000Z\",\"2023-01-12T00:00:00.000Z\",\"2023-01-13T00:00:00.000Z\",\"2023-01-17T00:00:00.000Z\",\"2023-01-18T00:00:00.000Z\",\"2023-01-19T00:00:00.000Z\",\"2023-01-20T00:00:00.000Z\",\"2023-01-23T00:00:00.000Z\",\"2023-01-24T00:00:00.000Z\",\"2023-01-25T00:00:00.000Z\",\"2023-01-26T00:00:00.000Z\",\"2023-01-27T00:00:00.000Z\",\"2023-01-30T00:00:00.000Z\",\"2023-01-31T00:00:00.000Z\",\"2023-02-01T00:00:00.000Z\",\"2023-02-02T00:00:00.000Z\",\"2023-02-03T00:00:00.000Z\",\"2023-02-06T00:00:00.000Z\",\"2023-02-07T00:00:00.000Z\",\"2023-02-08T00:00:00.000Z\",\"2023-02-09T00:00:00.000Z\",\"2023-02-10T00:00:00.000Z\",\"2023-02-13T00:00:00.000Z\",\"2023-02-14T00:00:00.000Z\",\"2023-02-15T00:00:00.000Z\",\"2023-02-16T00:00:00.000Z\",\"2023-02-17T00:00:00.000Z\",\"2023-02-21T00:00:00.000Z\",\"2023-02-22T00:00:00.000Z\",\"2023-02-23T00:00:00.000Z\",\"2023-02-24T00:00:00.000Z\",\"2023-02-27T00:00:00.000Z\",\"2023-02-28T00:00:00.000Z\",\"2023-03-01T00:00:00.000Z\",\"2023-03-02T00:00:00.000Z\",\"2023-03-03T00:00:00.000Z\",\"2023-03-06T00:00:00.000Z\",\"2023-03-07T00:00:00.000Z\",\"2023-03-08T00:00:00.000Z\",\"2023-03-09T00:00:00.000Z\",\"2023-03-10T00:00:00.000Z\",\"2023-03-13T00:00:00.000Z\",\"2023-03-14T00:00:00.000Z\",\"2023-03-15T00:00:00.000Z\",\"2023-03-16T00:00:00.000Z\",\"2023-03-17T00:00:00.000Z\",\"2023-03-20T00:00:00.000Z\",\"2023-03-21T00:00:00.000Z\",\"2023-03-22T00:00:00.000Z\",\"2023-03-23T00:00:00.000Z\",\"2023-03-24T00:00:00.000Z\",\"2023-03-27T00:00:00.000Z\",\"2023-03-28T00:00:00.000Z\",\"2023-03-29T00:00:00.000Z\",\"2023-03-30T00:00:00.000Z\",\"2023-03-31T00:00:00.000Z\",\"2023-04-03T00:00:00.000Z\",\"2023-04-04T00:00:00.000Z\",\"2023-04-05T00:00:00.000Z\",\"2023-04-06T00:00:00.000Z\"],[107.339996337891,107.199996948242,108.779998779297,108.389999389648,109.48999786377,109.360000610352,108.589996337891,109.819999694824,109.580001831055,109.610000610352,111.26000213623,112.930000305176,112.410003662109,113.089996337891,113.480003356934,112.330001831055,110.559997558594,111.900001525879,112.209999084473,111.639999389648,107.919998168945,105.040000915527,107.069999694824,107.819999694824,110,109.089996337891,108.699996948242,109.040000915527,109.720001220703,108.839996337891,109.690002441406,109.459999084473,109.779998779297,109.199996948242,108.01000213623,107.029998779297,105.379997253418,106.540000915527,102.73999786377,101.370002746582,106.889999389648,106.699996948242,111.830001831055,110.209999084473,107.669998168945,100.930000305176,103.379997253418,101.180000305176,93.3499984741211,97.0599975585938,88.6699981689453,95.4100036621094,90.2099990844727,90.0599975585938,86.9400024414062,95.4700012207031,94.3000030517578,89.6399993896484,99.1999969482422,95.370002746582,97.6900024414062,100.169998168945,97.5299987792969,102.290000915527,102.830001831055,106.51000213623,106.319999694824,106.800003051758,105.800003051758,109.300003051758,112.029998779297,113.51000213623,118.099998474121,115.150001525879,115.410003662109,113.269996643066,114.569999694824,114.459999084473,116.309997558594,116.019996643066,111.349998474121,112.779998779297,114.26000213623,113.269996643066,116.830001831055,119.610000610352,115.319999694824,116.800003051758,116.620002746582,117.370002746582,116.370002746582,116.900001525879,117.120002746582,118.129997253418,117.120002746582,118.540000915527,119.550003051758,117.360000610352,119.819999694824,116.639999389648,117.379997253418,121.349998474121,122.879997253418,122.779998779297,122.360000610352,117.930000305176,117.180000305176,118.319999694824,119.51000213623,121.069999694824,124.809997558594,122.419998168945,121.970001220703,126.519996643066,125.730003356934,128.110000610352,129.350006103516,130.190002441406,129.720001220703,130.600006103516,130.869995117188,130.740005493164,130.929992675781,130.690002441406,132.050003051758,135.220001220703,133.839996337891,134.270004272461,134.779998779297,135.610000610352,138.770004272461,140.809997558594,135.309997558594,138.529998779297,138.429992675781,138.050003051758,138.309997558594,141.529998779297,139.339996337891,138.300003051758,135.360000610352,135.240005493164,136.160003662109,134.779998779297,135.929992675781,138.589996337891,141.619995117188,142.360000610352,146.320007324219,146.179992675781,146.949996948242,143.990005493164,140.699996948242,135.699996948242,139.899993896484,141.770004272461,140.429992675781,140.449996948242,142.580001831055,141.860000610352,143.479995727539,141.210006713867,142.330001831055,142.210006713867,143.630004882812,141.770004272461,140.869995117188,139.470001220703,138.289993286133,139.559997558594,132.820007324219,130.130004882812,124.300003051758,128.699996948242,127.26000213623,126.019996643066,126.180000305176,128.330001831055,126.73999786377,125.26000213623,125.900001525879,128.289993286133,131.020004272461,128.419998168945,129.320007324219,131.190002441406,132.279998779297,130.020004272461,130.410003662109,132.779998779297,129.070007324219,130.720001220703,124.839996337891,125.01000213623,125.98999786377,127.449996948242,130.880004882812,132.940002441406,132.75,131.339996337891,131.919998168945,129.869995117188,127.360000610352,127.650001525879,126.919998168945,126.769996643066,126.680000305176,126.620002746582,125.599998474121,123.900001525879,119.830001831055,119.809997558594,120.73999786377,125.309997558594,128.330001831055,119.190002441406,116.970001220703,118.930000305176,119.779998779297,119.319999694824,120.800003051758,118.599998474121,118.519996643066,116.839996337891,120.139999389648,121.870002746582,121.860000610352,120.25,121.51000213623,124.169998168945,127.75,127.23999786377,129.539993286133,128.380004882812,128.690002441406,130.839996337891,132.149993896484,133.169998168945,134.679992675781,135.800003051758,137.539993286133,140.660003662109,141.600006103516,139.850006103516,142.610000610352,141.009994506836,139.429992675781,141.509994506836,141.809997558594,140.720001220703,140.699996948242,142.050003051758,143.600006103516,139.509994506836,141.320007324219,136.800003051758,140.740005493164,141.860000610352,141.220001220703,139.059997558594,136.339996337891,138.940002441406,139,141.429992675781,145.600006103516,145.970001220703,146,146.300003051758,146.300003051758,146.229995727539,143.009994506836,143.199996948242,145.869995117188,148.970001220703,140.820007324219,138.630004882812,141.220001220703,142.460006713867,146.110000610352,144.610000610352,147.330001831055,147.740005493164,145.779998779297,145.830001831055,147.410003662109,145.949996948242,142.259994506836,141.169998168945,137.679992675781,135.240005493164,133.970001220703,137.270004272461,136.820007324219,133.050003051758,131.289993286133,132.600006103516,127.209999084473,130.929992675781,130.119995117188,131.339996337891,130.490005493164,130.889999389648,131.740005493164,130.600006103516,128,128.399993896484,131.410003662109,133.050003051758,129.800003051758,130.029998779297,132.850006103516,134.970001220703,134.429992675781,135.369995117188,137.960006713867,141.539993286133,141.279998779297,142.009994506836,141.550003051758,140.460006713867,141.449996948242,142.110000610352,141.610000610352,142.770004272461,141.050003051758,139.630004882812,140.860000610352,141.039993286133,141.259994506836,143.139999389648,143.789993286133,143.460006713867,143.990005493164,146.339996337891,142.080001831055,141.179992675781,137.059997558594,137.860000610352,141.339996337891,142.419998168945,140.649993896484,141.360000610352,139.669998168945,139.130004882812,138.619995117188,137.529998779297,138.059997558594,138.880004882812,141.809997558594,140.169998168945,142.089996337891,143.259994506836,143.990005493164,142.929992675781,142.929992675781,143.619995117188,141.399993896484,141.990005493164,145.210006713867,145.720001220703,145.5,145.820007324219,145.660003662109,146.389999389648,148.550003051758,144.800003051758,142.600006103516,141.929992675781,141.119995117188,140.960006713867,140.860000610352,138.619995117188,138.649993896484,138.589996337891,142.979995727539,144.100006103516,143.830001831055,142.139999389648,143.410003662109,143,142.949996948242,140.449996948242,140.990005493164,141.389999389648,143.25,143.119995117188,142.660003662109,143.100006103516,141.240005493164,141.070007324219,140.720001220703,142.289993286133,144.990005493164,145.25,141.929992675781,143.559997558594,143.380004882812,143.960006713867,144.110000610352,139.800003051758,139.910003662109,136.869995117188,136.339996337891,136.160003662109,137.029998779297,138.300003051758,138.990005493164,138.679992675781,140,141.039993286133,139.990005493164,140.600006103516,140.169998168945,142.820007324219,142.570007324219,141.860000610352,141.470001220703,142.940002441406,143.289993286133,145.210006713867,146.429992675781,145.399993896484,146.600006103516,145.220001220703,144.100006103516,142.309997558594,145.130004882812,144.679992675781,145.369995117188,137.039993286133,135.960006713867,133.880004882812,130.089996337891,126.76000213623,126.400001525879,127.889999389648,129.899993896484,131.979995727539,133.770004272461,137.940002441406,142.25,143.589996337891,143.160003662109,144.089996337891,134.070007324219,137.589996337891,139.990005493164,139.470001220703,136.669998168945,136.440002441406,135.710006713867,134.75,134.710006713867,136.75,139.199996948242,140.630004882812,141.070007324219,142.190002441406,142.399993896484,140.369995117188,140.229995727539,140.25,141.770004272461,140.169998168945,139.5,142.479995727539,139.570007324219,138.160003662109,139.789993286133,139.279998779297,144.449996948242,145.440002441406,141.279998779297,139.559997558594,138.139999389648,137.330001831055,132.389999389648,126.279998779297,128.410003662109,126.650001525879,125.970001220703,124.879997253418,124.220001220703,120.230003356934,122.589996337891,125.269996643066,126.309997558594,126.150001525879,126.370002746582,125,125.639999389648,126.769996643066,126.849998474121,128.899993896484,129.389999389648,127.519996643066,129.919998168945,132.169998168945,131.470001220703,132.539993286133,133.039993286133,133.470001220703,133.139999389648,134.460006713867,131.899993896484,134.949996948242,135.759994506836,133.800003051758,129.690002441406,131.779998779297,128.899993896484,130.800003051758,132.5,130.839996337891,130.440002441406,133.910003662109,136.910003662109,138.880004882812,139.009994506836,135.199996948242,131.009994506836,129.979995727539,131.059997558594,131.919998168945,132.660003662109,129.940002441406,137.169998168945,137.289993286133,137.710006713867,136.399993896484,134.369995117188,135.789993286133,134.979995727539,134.100006103516,133.399993896484,134.5,133.289993286133,130.399993896484,129.330001831055,127.089996337891,126.720001220703,127.5,128.710006713867,130.089996337891,128.149993896484,129.259994506836,127.839996337891,126.48999786377,126.26000213623,122.669998168945,125.519996643066,123.680000305176,122.330001831055,119.129997253418,120.800003051758,123.800003051758,125.180000305176,126.279998779297,125.559997558594,127.930000305176,124.639999389648,125.569999694824,127.319999694824,128.039993286133,128.830001831055,127.680000305176,126.51000213623,125.230003356934,128.020004272461,125.860000610352,124.849998474121,123.400001525879,123.480003356934,122.580001831055,123.569999694824,123.620002746582,122.599998474121,122.160003662109,124.040000915527,123.309997558594,123.73999786377,128.089996337891,128.149993896484,124.629997253418,121.220001220703,123.410003662109,118.050003051758,120,122.51000213623,123.720001220703,119.610000610352,115.290000915527,112.040000915527,111.599998474121,120.48999786377,120.949996948242,124.940002441406,127.389999389648,128.470001220703,128.970001220703,130.020004272461,130.759994506836,133.770004272461,136.679992675781,137.350006103516,138.679992675781,138.529998779297,138.649993896484,139.529998779297,141.5,141,140.350006103516,140.970001220703,139.220001220703,135.809997558594,133.440002441406,128.759994506836,127.370002746582,129.259994506836,127.980003356934,128.539993286133,130.389999389648,129.029998779297,128.960006713867,130.199996948242,125.599998474121,122.879997253418,122.830001831055,121.650001525879,122.730003356934,124.75,124.349998474121,125.599998474121,125.629997253418,123.839996337891,121.980003356934,121.680000305176,122.290000915527,123.160003662109,123.620002746582,126.75,127.589996337891,130.210006713867,130.160003662109,129.919998168945,130.75,132.179992675781,133.179992675781,131.229995727539,130.869995117188,128.889999389648,133.279998779297,133.240005493164,132.559997558594,131.050003051758,129.279998779297,131.160003662109,129.679992675781,131.369995117188,131.600006103516,135.110000610352,133.169998168945,132.470001220703,130.479995727539,128.119995117188,126.730003356934,125.610000610352,127.610000610352,132.169998168945,129.600006103516,126.470001220703,126.870002746582,127.680000305176,125.330001831055,124.730003356934,125.550003051758,127.139999389648,128.929992675781,130.850006103516,127.589996337891,126.919998168945,124.410003662109,121.73999786377,122.930000305176,120.540000915527,117.48999786377,117.419998168945,115.639999389648,114.819999694824,115.139999389648,118.349998474121,117.470001220703,115.709999084473,119.860000610352,123.199996948242,122.669998168945,123.660003662109,122.309997558594,120.680000305176,119.25,118.879997253418,121.220001220703,120.370002746582,121.029998779297,123.370002746582,123.839996337891,123.550003051758,124.98999786377,125.669998168945,127.73999786377,127.25,127.699996948242,128.240005493164,125.959999084473,126.269996643066,128.660003662109,126.620002746582,129.759994506836,132.419998168945,129.100006103516,126.290000915527,130.300003051758,131.229995727539,129.559997558594,128.779998779297,129.339996337891,128.649993896484,130.080001831055,127.860000610352,129.520004272461,130.960006713867,129.5,128.350006103516,127.589996337891,130.779998779297,131.619995117188,132.279998779297,130.419998168945,127.410003662109,126.01000213623,126.110000610352,124.709999084473,125.599998474121,125.680000305176,124.660003662109,121.730003356934,121.73999786377,120.790000915527,120.419998168945,122.5,121.419998168945,121.51000213623,120.819999694824,119.540000915527,122.190002441406,122.180000305176,122.800003051758,125.01000213623,124.680000305176,123.889999389648,124.169998168945,124.019996643066,126.110000610352,126.419998168945,125.459999084473,123.699996948242,123.709999084473,123.720001220703,125.98999786377,127.410003662109,127.48999786377,127.559997558594,129.139999389648,128.869995117188,128.990005493164,128.679992675781,116.76000213623,115.98999786377,113.919998168945,112.190002441406,114.180000305176,112.699996948242,111.790000915527,111.800003051758,113.199996948242,112.25,113.339996337891,111.720001220703,112,112.019996643066,111.73999786377,110.720001220703,109.769996643066,111.089996337891,110.940002441406,110.410003662109,112.290000915527,113.150001525879,113.190002441406,112.139999389648,112.279998779297,110.459999084473,109.190002441406,110.069999694824,111.480003356934,111.379997253418,113.529998779297,113.349998474121,113.519996643066,114.940002441406,113.160003662109,116.040000915527,119.029998779297,118.639999389648,118.019996643066,119.190002441406,119.099998474121,120.449996948242,121.349998474121,125.23999786377,126.150001525879,125.160003662109]]},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n<br />\n\n### Decomposition Plots\n\nDecomposition of a time series enables you to view it broken out into 3 key components (in addition to observed values):\n\n-   overall **trend**\n-   **seasonality** trending\n-   **randomness** trend (noise)\n\nThis can make it easier to 'separate the signal from the noise' and get a clearer sense of what is going on.\n\nThere has to be data over a long enough period to assess any seasonal trend, so this requires:\n\n-   **frequency \\> 1**, where 1=annual data; typically it would be at least 4 (quarterly), 12 (monthly), 52 (weekly), 365 (daily).\n-   **period longer than 2 years**: one year is not enough to establish a seasonal *pattern* over time.\n    -   if you get ['Error in decomposet(<data>): time series has no or less than 2 periods']{style=\"color:red;\"} it is usually due to violating one or both of the above conditions.\n-   need to translate xts object to **ts** for this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Air Passengers has enough data\nap_decomp <- decompose(AirPassengers)\nplot(ap_decomp)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/decomp-plots-01-1.png){width=768}\n:::\n\n```{.r .cell-code}\napx_decomp <- decompose(ts(Air_xts, frequency=12))\nplot(apx_decomp)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/decomp-plots-01-2.png){width=768}\n:::\n:::\n\n\n-   same results with both approaches, although the original ts object maintains dates on x-axis, making it easier to interpret.\n-   **interpretation**: steady upward trend; peaks at mid-year; randomness fairly large at first, settles down, then appears to be growing over time.\n-   coincides with what we see in the observed data but makes the patterns more evident.\n\nIf we fetch some longer daily data for stock price, we can do the same:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## fetch some longer price data\nprice_d <- getSymbols('EA', from='2016-01-01', to='2021-12-31', auto.assign = FALSE)\nprice_decomp <- decompose(ts(price_d$EA.Close, frequency=365), type=\"additive\")\nplot(price_decomp)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/decomp-plots-02-1.png){width=768}\n:::\n:::\n\n\n-   we provide 6 full years of data and most of that is used to calculated decomposition.\n-   x-axis is year number.\n-   **TREND**: trending up to about half-way through year 2, then down until about the same point in year 3, then back up, looking like a peak in mid year 4. Not willing to stretch out beyond that. ;)\n-   **SEASONAL**: pattern has been detected where tends to be a dip at beginning of year, rising up to a peak toward end of first quarter, dropping sharply, smaller peak mid-year, peak in q3 or early q4, drop with a smaller bump at end of year.\n-   **RANDOM**: as to be expected with stock price in general, lots of randomness involved!\n\nLooks like there may be money to be made riding the seasonal wave! Please: **do *not* buy or sell stocks** based on this information. ;)\n\n### Forecasting\n\nA primary use case for time series objects is forecasting. This is a whole other, involved topic way beyond the scope of this post.\n\nHere is a quick example to show how easy forecasting can be in R. Note that we need to bring in the **forecast** package for this. (There is also the amazing **[tidyverts eco-system]**(<https://tidyverts.org/>) for working with time series that I have recently discovered - again, a whole other topic for another time.)\n\n#### Get an ARIMA Model\n\nSome basic terms, over-simplified for our purposes here:\n\n-   **ARIMA** stands for **A**uto **R**egression **I**ntegrated **M**oving **A**verage\n-   One of the most widely-used time series forecasting methods, although certainly not the only.\n-   3 essential parameters for ARIMA are p,d,q: p=periods of lag, d=differencing, q=error of the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(forecast)\n## get closing prices for forecasting\nprice_cl <- price[,4]\n## get a model for the time series - using auto.arima for simplicity\nfitA <- auto.arima(price_cl, seasonal=FALSE) ## can add trace=TRUE to see comparison of different models \n## show model\nfitA\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSeries: price_cl \nARIMA(0,1,0) \n\nsigma^2 = 5.11:  log likelihood = -1834\nAIC=3671   AICc=3671   BIC=3675\n```\n:::\n:::\n\n\nThe model we get back is **ARIMA(0,1,1)** which means p=0, d=1, q=1. We can generate a model by setting these parameters manually, but **auto.arima** automatically checks a variety of models and selects the best. When comparing models, lowest AIC and BIC are preferred.\n\nWe can check the accuracy of the model. Most useful item here for interpretation and comparison is MAPE (mean average percent error). In this case,\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## check accuracy - based on historical data\naccuracy(fitA)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 ME RMSE  MAE     MPE MAPE  MASE    ACF1\nTraining set 0.0218 2.26 1.67 0.00169 1.33 0.999 -0.0405\n```\n:::\n\n```{.r .cell-code}\nfitAa <- accuracy(fitA)\n100-fitAa[,5]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 98.7\n```\n:::\n:::\n\n\nSo in this case a MAPE of 1.325 can be seen as accuracy of 98.675%.\n\nWe can also plot the residuals of the model for visual inspection.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## check residuals\ntsdisplay(residuals(fitA), main='Residuals of Simple ARIMA Forecasting Model for Stock Price')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/resid-plot-01-1.png){width=768}\n:::\n:::\n\n\nAs usual with residuals, we are looking for mean around 0, roughly evenly distributed. For ARIMA we also get ACF and PACF, where we are looking for bars to be short and at least within blue dotted lines. So looks like we are good to go here.\n\n#### Create A Forecast\n\nWe just need a little more code to create and plot forecast. We can set the forecast period for whatever we want, based on the periodicity of the data, in this case days and we are looking out 30 days.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndays=30\nfcastA <- forecast(fitA, h=days)\nplot(fcastA)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/forecast-plot-01-1.png){width=768}\n:::\n:::\n\n\nThat was easy! And we can use this approach to quickly iterate over various models, if we are not convinced that auto.arima is the best. Of course you can use data frames to create forecasts of various sorts but the xts object makes it super-easy to apply common time series methods.\n\nThis also reveals a shortcoming of times-series forecasting:\n\n-   dependence of **pattern recognition** and **pattern repetition**, which can lead to conservative forecast, especially with noisy data.\n-   as a result, the forecast is: *'steady as she goes, with possibility of moving either quite a bit higher or quite a bit lower'.*\n\nSo not that useful. To be fair, if stock market prices are not actually predictable, so it is a perfectly reasonable outcome that grounds us in reality.\n\n### Conclusion\n\nTimes series objects are obviously a powerful way to work with time-based data and a go-to when your data is based on time. Particular strengths inculde:\n\n-   Ease of **manipulation** such as aggregation by date periods, selecting date ranges, period calculations.\n-   Some great **visualization** options for exploring the data.\n-   **Forecasting** which is really the bread and butter of time series objects.\n\nThere are some cases where you may prefer to stick with data frames:\n\n-   **Multi-dimensional data**: time series work best when each row represents a distinct time. If you are dealing with multi-dimensional data where dates are broken down by customer, or region, etc., especially in tidy format, you may want to stick with data frame.\n-   **Visualization preferences**: if you are more comfortable with using ggplot2 (or other visualization tools geared toward data frames) a data frame may be preferable. Or if the document you are producing has ggplot2 charts, you may want to maintain standard presentation.\n-   **Forecasting needs**: if you are doing time series forecasting you will want to use a time series object. If you're not doing forecasting, there is less of a need. Limitation is that time series forecasting is based only on historical trends in the data and doesn't include things like correlation with other factors.\n\nUltimately, the right tool for the job depends on a variety of situational factors, and having a collection of tools at your disposal helps you avoid the 'when you have is a hammer...' pitfall. If your data is based on time, time series should be in consideration.\n\nSo that's quite a lot for one blog post - hopefully helps you make the most of your 'time'!\n\n### Resources\n\nAdditional resources that may be helpful with time-series and xts in particular:\n\n-   [xts Cheat Sheet](http://datacamp-community-prod.s3.amazonaws.com/72771032-0653-4d87-a798-4a83879e99c8).\n-   [supplementary info. to cheat sheet](https://www.datacamp.com/community/blog/r-xts-cheat-sheet).\n-   [xts package vignette](https://cran.r-project.org/web/packages/xts/xts.pdf).\n-   [time series section in R Cookbook 2nd Edition](https://rc2e.com/timeseriesanalysis).\n-   [tsibble package info.](https://tsibble.tidyverts.org/) - time series for tidyverse.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/jquery-1.11.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/dygraphs-1.1.1/dygraph.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dygraphs-1.1.1/dygraph-combined.js\"></script>\n<script src=\"../../site_libs/dygraphs-1.1.1/shapes.js\"></script>\n<script src=\"../../site_libs/moment-2.8.4/moment.js\"></script>\n<script src=\"../../site_libs/moment-timezone-0.2.5/moment-timezone-with-data.js\"></script>\n<script src=\"../../site_libs/moment-fquarter-1.0.0/moment-fquarter.min.js\"></script>\n<script src=\"../../site_libs/dygraphs-binding-1.1.1.6/dygraphs.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}